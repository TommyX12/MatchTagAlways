{"body":"# Always highlight enclosing tags\r\n\r\nThe MatchTagAlways.vim (MTA) plug-in for the [Vim text editor][vim] always\r\nhighlights the XML/HTML tags that enclose your cursor location. It's probably\r\neasiest to describe with a screenshot:\r\n\r\n![MatchTagAlways screen shot](http://i.imgur.com/qAf0N.gif)\r\n\r\nIt even works with HTML templating languages like Jinja or HTML5 use-cases\r\nlike unclosed tags. It's pretty smart and should do the right thing in most\r\ncases. If it doesn't, report the problem on the [issue tracker][tracker]!\r\n\r\n## Installation\r\n\r\nUse [Vundle][vundle] to install the plugin. You _are_ using Vundle to manage\r\nyour Vim plugins, right? [Pathogen][pathogen] works fine too (but I recommend\r\nVundle).\r\n\r\nNote that the plugin requires that your copy of Vim is compiled with Python\r\nsupport. You can check for this with `:echo has('python')` in Vim. If the output\r\nis `1`, then you have Python support.\r\n\r\nAfter installation you should be done. The plugin should be plug & play. It will\r\nautomatically turn itself on for HTML, XML and a few other HTML-like filetypes.\r\nYou can also explicitly turn it on for other filetypes too (more details in the\r\nOptions section).\r\n\r\n## Options\r\n\r\nAll options have reasonable defaults so if the plug-in works after installation\r\nyou don't need to change any options. These options can be configured in your\r\n[vimrc script] [vimrc] by including a line like this:\r\n\r\n    let g:mta_use_matchparen_group = 1\r\n\r\nNote that after changing an option in your [vimrc script] [vimrc] you have to\r\nrestart Vim for the changes to take effect.\r\n\r\n### The `g:mta_filetypes` option\r\n\r\nThis option holds all the filetypes for which this plugin will try to find and\r\nhighlight enclosing tags. It's a Vim dictionary with keys being Vim filetypes.\r\nThe values set for those keys don't matter and are not checked, the only thing\r\nthat matters is that a key is present in the dictionary (VimL has no sets).\r\n\r\nYou can find out what the current file's filetype is in Vim with `:set ft?`.\r\nDon't forget that question mark at the end!\r\n\r\nDefault: `{ 'html' : 1, 'xhtml' : 1, 'xml' : 1, 'jinja' : 1 }`\r\n\r\n    let g:mta_filetypes = {\r\n        \\ 'html' : 1,\r\n        \\ 'xhtml' : 1,\r\n        \\ 'xml' : 1,\r\n        \\ 'jinja' : 1,\r\n        \\}\r\n\r\n### The `g:mta_use_matchparen_group` option\r\n\r\nWhen set to 1, forces the use of the [MatchParen][matchparen] syntax group. This\r\nis the same group that Vim uses to highlight parens, braces etc. This option is\r\nuseful for people who want to use the same highlight color for both constructs.\r\n\r\nWhen set to 0, MTA will use a custom `MatchTag` syntax group with a default\r\nhighlight color. See the `g:mta_set_default_matchtag_color` option for\r\ninstructions on how to change that color.\r\n\r\nDefault: `0`\r\n\r\n    let g:mta_use_matchparen_group = 0\r\n\r\n### The `g:mta_set_default_matchtag_color` option\r\n\r\nThis option only makes sense when `g:mta_use_matchparen_group` is set to 0. When\r\nit is, `g:mta_set_default_matchtag_color` option can be used to prevent MTA from\r\noverwriting any color you have set for the `MatchTag` group.\r\n\r\nSo, if you want to use a custom color for tag highlighting, have both\r\n`g:mta_use_matchparen_group` and `g:mta_set_default_matchtag_color` set to 0 and\r\nthen set a custom color for `MatchTag` in your `vimrc`. For example, the\r\nfollowing command would set a light green text background and a black foreground\r\ncolor ('foreground' is the text color):\r\n\r\n    highlight MatchTag ctermfg=black ctermbg=lightgreen guifg=black guibg=lightgreen\r\n\r\nSee `:help highlight` for more details on text highlighting commands.\r\n\r\nDefault: `1`\r\n\r\n    let g:mta_use_matchparen_group = 1\r\n\r\n## FAQ\r\n\r\n### I've noticed that sometimes no tags are highlighted. Why?\r\n\r\nThe plugin only scans the lines that are visible in your window. If an opening\r\ntag is visible but the closing tag is not, no tag will be highlighted. This is\r\nfor performance reasons (ie. what happens if the user opens a 10k HTML file?).\r\n\r\nIt's also possible that the plugin's parser is just out of ideas on how to\r\nextract the enclosing tags out of your text. This should be very rare though.\r\n\r\n## Contact\r\n\r\nIf you have questions, bug reports, suggestions, etc. please use the [issue\r\ntracker][tracker]. The latest\r\nversion is available at <http://github.com/Valloric/MatchTagAlways>.\r\n\r\nThe author's homepage is <http://val.markovic.io>.\r\n\r\n## License\r\n\r\nThis software is licensed under the [GPL v3 license][gpl].\r\nÂ© 2012 Strahinja Val Markovic &lt;<val@markovic.io>&gt;.\r\n\r\n\r\n[vimrc]: http://vimhelp.appspot.com/starting.txt.html#vimrc\r\n[vim]: http://www.vim.org/\r\n[gpl]: http://www.gnu.org/copyleft/gpl.html\r\n[vundle]: https://github.com/gmarik/vundle#about\r\n[pathogen]: https://github.com/tpope/vim-pathogen#pathogenvim\r\n[matchparen]: http://vimhelp.appspot.com/pi_paren.txt.html\r\n[tracker]: https://github.com/Valloric/MatchTagAlways/issues\r\n","google":"UA-34688172-1","tagline":"Vim plugin that always highlights the enclosing html/xml tags","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"MatchTagAlways"}